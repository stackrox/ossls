version: 2

jobs:
  test:
    docker:
    - image: circleci/golang:1.13.8
    working_directory: /go/src/github.com/stackrox/ossls
    steps:
    - checkout
    - run:
        name: Install dependencies
        command: |
          go install golang.org/x/tools/cmd/goimports

    - run:
        name: Check formatting
        command: |
          offending_files="$(git ls-files -- '*.go' | xargs goimports -l)"
          if [[ -n "$offending_files" ]]; then
            echo "The following files formatting differs from goimports's output:"
            echo "$offending_files"
            exit 1
          fi

    - run:
        name: Run tests
        command: |
          go test -v ./...

  build:
    docker:
    - image: circleci/golang:1.13.8
    working_directory: /go/src/github.com/stackrox/ossls
    steps:
    - checkout
    - run:
        name: Install dependencies
        working_directory: /tmp
        command: |
          sudo env GOOS=darwin GOARCH=amd64 $(which go) install std
          wget --quiet https://github.com/upx/upx/releases/download/v3.94/upx-3.94-amd64_linux.tar.xz
          tar --strip=1 -xf upx-3.94-amd64_linux.tar.xz
          sudo install upx /usr/bin

    - run:
        name: Build binaries
        command: |
          version="$(git describe --tags)"
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -a \
            -ldflags="-s -w -X main.version=$version" \
            -o artifacts/ossls_darwin_amd64 .
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a \
            -ldflags="-s -w -X main.version=$version" \
            -o artifacts/ossls_linux_amd64 .

    - run:
        name: Compress binary
        command: upx --best --ultra-brute artifacts/ossls_*

    - run:
        name: Checksum binary
        working_directory: artifacts
        command: sha256sum --binary --tag ossls_* | tee checksums.txt

    - store_artifacts:
        path: artifacts
        destination: /artifacts

    - persist_to_workspace:
        root: .
        paths:
        - artifacts

  release:
    docker:
    - image: cibuilds/github:0.13.0
    working_directory: /go/src/github.com/stackrox/ossls
    steps:
    - attach_workspace:
        at: .
    - run:
        name: Upload artifacts
        command: ghr -u stackrox -r ossls -replace ${CIRCLE_TAG} artifacts

workflows:
  version: 2
  build:
    jobs:
    - test
    - build

  release:
    jobs:
    - build:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
    - release:
        requires:
        - build
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/